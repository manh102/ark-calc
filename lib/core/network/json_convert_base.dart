// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.

import 'package:new_ark_calc/core/extensions/iterable_extension.dart';
import 'package:new_ark_calc/features/home/data/models/brand_model.dart';
import 'package:new_ark_calc/features/home/data/models/category_model.dart';
import 'package:new_ark_calc/features/home/data/models/reward_response_model.dart';
import "package:new_ark_calc/features/profile/data/models/user_profile_model.dart";

import '../../features/sign_in/data/models/sign_in_model.dart';

class JsonConvert<T> {
  //Go back to a single instance by type
  static _fromJsonSingle<M>(json) {
    String type = M.toString();
    if (type.startsWith('SignInModel')) {
      return SignInModel.fromMap(json);
    } else if (type.startsWith("UserProfileModel")) {
      return UserProfileModel.fromMap(json);
    } else if (type.startsWith("RewardResponseModel")) {
      return RewardResponseModel.fromMap(json);
    }
    return json as M;
  }

  //list is returned by type
  static M _getListChildType<M>(List data) {
    String type = M.toString();

    if (type.startsWith("List<CategoryModel>")) {
      final mapList = data
          .mapList<CategoryModel>((source) => CategoryModel.fromMap(source));
      return mapList as M;
    } else if (type.startsWith("List<BrandModel>")) {
      final mapList =
          data.mapList<BrandModel>((source) => BrandModel.fromMap(source));
      return mapList as M;
    }

    return data as M;
  }

  static M fromJsonAsT<M>(json) {
    if (json is List) {
      return _getListChildType<M>(json);
    } else {
      return _fromJsonSingle<M>(json) as M;
    }
  }
}
